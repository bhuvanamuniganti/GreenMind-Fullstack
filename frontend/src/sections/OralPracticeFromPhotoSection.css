/* OralPracticeFromPhotoSection.css - styles for the page */
.op-root { font-family: Inter, system-ui, Arial; color: #0f172a; }
.pp-layout { display: flex; gap: 18px; align-items: flex-start; }
.pp-left { width: 360px; flex: 0 0 360px; }
.pp-right { flex: 1; }

/* panels */
.card { background: #fff; border: 1px solid #e6eef6; border-radius: 12px; padding: 12px; box-shadow: 0 8px 20px rgba(2,6,23,0.02); }
.pp-panel { padding: 12px; border-radius: 12px; }

/* parent photo */
.pp-photo-wrap { position: relative; width: 100%; height: 285px; border-radius: 10px; overflow: hidden; display:flex; align-items:center; justify-content:center; background: linear-gradient(180deg,#fff,#f8fafc); }
.pp-photo { width: 100%; height: 100%; max-height: 100%; object-fit: cover; border-radius: 8px; user-select:none; pointer-events:none; display:block; }

/* actions */
.pp-actions { margin-top: 12px; display:flex; gap:8px; align-items:center; }
.pp-text { margin-top: 10px; color: #475569; font-size: 14px; }

/* input / preview */
.pp-textarea { width: 100%; min-height: 120px; padding: 12px; border-radius: 8px; border: 1px solid #e6eef6; resize: vertical; box-sizing: border-box; background: #fff; }
.pp-input-preview-box { position: absolute; left: 14px; bottom: -90px; display:flex; align-items:center; gap:10px; background: #fff; border: 1px solid #e5e7eb; border-radius: 10px; padding: 8px; box-shadow: 0 10px 30px rgba(0,0,0,0.06); min-width: 120px; max-width: 300px; }
.preview-img { width: 90px; height: 66px; object-fit: cover; border-radius: 6px; }
.preview-placeholder { color:#94a3b8; font-size:13px; }

/* recorder */
.recorder-box { border-radius: 8px; padding: 8px; background: #fff; border: 1px solid #eef2ff; }
.recorder-canvas { width: 100%; height: 110px; display:block; border-radius: 6px; }
.recorder-buttons { display:flex; gap:8px; flex-wrap:wrap; margin-top:8px; }

/* action row and small helpers */
.action-row { margin-top: 12px; display:flex; gap:8px; align-items:center; }
.btn { border-radius: 8px; padding: 8px 12px; color: #fff; border: none; font-weight: 700; cursor: pointer; background:#e5e7eb; color:#111827; }
.btn-primary { background: #3b82f6; color: #fff; }
.btn-red { background:#ef4444; color:#fff; }
.btn-blue { background:#0ea5e9; color:#fff; }

/* feedback */
.pron-feedback { margin-top: 12px; background: #fffbe6; border: 1px solid #fef3c7; padding: 10px; border-radius: 8px; }
.pf-word { padding: 8px 10px; border-radius: 8px; min-width: 120px; display:flex; gap:8px; align-items:center; }
.pf-word.good { background:#ecfdf5; color:#065f46; }
.pf-word.bad { background:#fee2e2; color:#991b1b; }

/* graded */
.graded { margin-top: 10px; padding: 10px; border-radius: 8px; }
.graded.good { background:#ecfdf5; color:#065f46; }
.graded.bad { background:#fef2f2; color:#991b1b; }

/* responsive */
@media (max-width: 980px) {
  .pp-layout { flex-direction: column; }
  .pp-left { width: 100%; }
  .pp-right { width: 100%; }
}
/* ---------------------------
   Improved, integrated mouth overlay
   - replaces previous pp-photo-wrap::after rules
   - two layered, blended gradients for a soft, "part of the photo" look
   --------------------------- */

/* tweak per-photo with inline style variables */
.pp-photo-wrap {
  --gm-mouth-left: 50%;        /* horizontal center of mouth (use % or px) */
  --gm-mouth-bottom: 14%;      /* distance from bottom of image (use % or px) */
  --gm-mouth-width: 64px;      /* mouth width */
  --gm-mouth-height: 12px;     /* mouth height when closed */
  --gm-mouth-open-scale: 1.25; /* vertical opening multiplier */
  --gm-mouth-opacity: 0.18;    /* overall darkness */
  --gm-mouth-blur: 6px;        /* soft blur */
  position: relative;
  display: inline-block;
  -webkit-transform: translateZ(0);
}

/* Layer 1: soft shadow/core (use ::after) */
.pp-photo-wrap::after {
  content: "";
  position: absolute;
  left: var(--gm-mouth-left);
  bottom: var(--gm-mouth-bottom);
  width: var(--gm-mouth-width);
  height: var(--gm-mouth-height);
  transform: translateX(-50%) scaleY(0.33) translateY(0px);
  transform-origin: center center;
  border-radius: 999px;
  /* inner darker core (very soft) */
  background: radial-gradient(ellipse at center,
    rgba(0,0,0,calc(var(--gm-mouth-opacity) * 1.0)) 0%,
    rgba(0,0,0,calc(var(--gm-mouth-opacity) * 0.5)) 40%,
    rgba(0,0,0,0.02) 75%,
    rgba(0,0,0,0) 100%);
  filter: blur(calc(var(--gm-mouth-blur) * 0.85));
  pointer-events: none;
  mix-blend-mode: overlay;   /* blends with skin tones */
  opacity: 0.95;
  will-change: transform, opacity;
  transition: transform 120ms linear, opacity 160ms linear;
}

/* Layer 2: feathered outer glow (use ::before) */
.pp-photo-wrap::before {
  content: "";
  position: absolute;
  left: var(--gm-mouth-left);
  bottom: calc(var(--gm-mouth-bottom) - (var(--gm-mouth-height) * 0.08));
  width: calc(var(--gm-mouth-width) * 1.12);
  height: calc(var(--gm-mouth-height) * 1.3);
  transform: translateX(-50%) scaleY(0.28);
  transform-origin: center center;
  border-radius: 999px;
  /* very soft outer feather to blend edges */
  background: radial-gradient(ellipse at center,
    rgba(0,0,0,calc(var(--gm-mouth-opacity) * 0.28)) 0%,
    rgba(0,0,0,0.06) 45%,
    rgba(0,0,0,0.02) 70%,
    rgba(0,0,0,0) 100%);
  filter: blur(var(--gm-mouth-blur));
  pointer-events: none;
  mix-blend-mode: overlay;
  opacity: 0.92;
  will-change: transform, opacity;
  transition: transform 140ms ease, opacity 180ms ease;
}

/* speaking animation: a slightly irregular loop for natural feel */
.pp-photo-wrap.speaking::after,
.pp-photo-wrap.speaking::before {
  animation: gm-mouth-natural 640ms infinite ease-in-out;
}

/* feedback variant (subtle emphasis) */
.pp-photo-wrap.speaking.feedback::after,
.pp-photo-wrap.speaking.feedback::before {
  animation-duration: 760ms;
  /* make it barely more visible during feedback */
  opacity: 1;
}

/* keyframes: combine scaleY with small translateY and micro opacity pulses */
@keyframes gm-mouth-natural {
  0%   { transform: translateX(-50%) scaleY(0.30) translateY(0px); opacity: 0.92; }
  15%  { transform: translateX(-50%) scaleY(0.88) translateY(-1px); opacity: 0.98; }
  35%  { transform: translateX(-50%) scaleY(0.55) translateY(0px); opacity: 0.96; }
  55%  { transform: translateX(-50%) scaleY(1.10) translateY(-2px); opacity: 1; }
  75%  { transform: translateX(-50%) scaleY(0.65) translateY(-0.5px); opacity: 0.95; }
  100% { transform: translateX(-50%) scaleY(0.30) translateY(0px); opacity: 0.92; }
}

/* Allow slight differences between ::after and ::before timing to avoid perfect sync:
   (Using animation-delay via inline style is ideal â€” see suggestion below) */
.pp-photo-wrap.speaking::before { animation-delay: 90ms; }

/* responsive tweak: reduce effect on narrow screens */
@media (max-width: 600px) {
  .pp-photo-wrap { --gm-mouth-width: calc(var(--gm-mouth-width) * 0.85); --gm-mouth-height: calc(var(--gm-mouth-height) * 0.85); --gm-mouth-blur: calc(var(--gm-mouth-blur) * 0.8); }
  .pp-photo-wrap::before { animation-delay: 60ms; }
}


/* small helper so you can manually reduce visibility if needed */
.pp-photo-wrap[data-mouth="off"]::after,
.pp-photo-wrap[data-mouth="off"]::before { opacity: 0; pointer-events: none; animation: none; transition: none; }
